
function openOrderForm(){
   Aliases.Orders.MainForm.MainMenu.Click("Orders|New order...");
   return this;
}

function addOrder1(){

  Aliases.Orders.OrderForm.Group.Customer.SetText("mari");
  Aliases.Orders.OrderForm.Group.Street.SetText("guramishvili ave");
  return this;
}
function addOrder2(){

  Aliases.Orders.OrderForm.Group.Customer.SetText("ana");
  Aliases.Orders.OrderForm.Group.State_.SetText("texas");
  return this;
}

function addOrder3(){
  Aliases.Orders.OrderForm.Group.Quantity.UpDownEdit.SetText("5")
  Aliases.Orders.OrderForm.Group.City.SetText("Tbilisi");
  Aliases.Orders.OrderForm.Group.Zip.SetText("1234");
  return this;
}
function clickOkButton(){
  Aliases.Orders.OrderForm.ButtonOK.Click();
  return this;
}
function assertionThatIsVisible(){
 aqObject.CheckProperty(Aliases.Orders.MainForm.OrdersView.Header, "wItemCount", cmpEqual, 11);
 return this;
}

function checkingThatWindowIsClosed(){
  try {
    var isWindowExists = Aliases.Orders.Exists;
} catch (e) {
    Log.Message("Window is already closed" + e.message);
}
return this;
}

module.exports.addOrder1 = addOrder1;
module.exports.openOrderForm = openOrderForm;
module.exports.addOrder2 = addOrder2;
module.exports.addOrder3 = addOrder3;
module.exports.clickOkButton = clickOkButton;
module.exports.assertionThatIsVisible = assertionThatIsVisible;
module.exports.checkingThatWindowIsClosed = checkingThatWindowIsClosed;